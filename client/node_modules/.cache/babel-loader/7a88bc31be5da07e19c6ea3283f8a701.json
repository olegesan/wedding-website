{"ast":null,"code":"import _slicedToArray from\"/Users/olegbaz/Documents/GitHub/test-wedding/wedding-backend/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import Scrollspy from'react-scrollspy';import'./StickyNavBar.css';function StickyNavBar(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),sticky=_useState2[0],setSticky=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),beenSticky=_useState4[0],setBeenSticky=_useState4[1];useEffect(function(){if(props.sticky){setSticky(true);setBeenSticky(true);}else{setSticky(false);}},[props.sticky]);var sticky_state=function sticky_state(){if(!beenSticky){return'none';}else if(sticky){return'show';}else{return'hidden';}};return React.createElement(\"div\",{className:\"\".concat(sticky_state(),\" scrollspy\"),style:{'position':'fixed','top':'0px'},id:\"StickyNavBar\"},React.createElement(Scrollspy,{items:['TopPane','Ceremony','Reception','Afterparty','Accomodations','Registry','RSVP'],currentClassName:\"is-current\"},React.createElement(\"span\",null,React.createElement(\"a\",{href:\"/#TopPane\"},\"Top\")),React.createElement(\"span\",null,React.createElement(\"a\",{href:\"/#Ceremony\"},\"Ceremony\")),React.createElement(\"span\",null,React.createElement(\"a\",{href:\"/#Reception\"},\"Reception\")),React.createElement(\"span\",null,React.createElement(\"a\",{href:\"/#Afterparty\"},\"Afterparty\")),React.createElement(\"span\",null,React.createElement(\"a\",{href:\"/accommodations\"},\"Accommodations\")),React.createElement(\"span\",null,React.createElement(\"a\",{href:\"/registry\"},\"Registry\")),React.createElement(\"span\",null,React.createElement(\"a\",{href:\"/RSVP\"},\"RSVP\"))));}export default StickyNavBar;","map":{"version":3,"sources":["/Users/olegbaz/Documents/GitHub/test-wedding/wedding-backend/client/src/components/StickyNavBar.js"],"names":["React","useState","useEffect","Scrollspy","StickyNavBar","props","sticky","setSticky","beenSticky","setBeenSticky","sticky_state"],"mappings":"0LAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,SAAP,KAAsB,iBAAtB,CACA,MAAO,oBAAP,CAGA,QAASC,CAAAA,YAAT,CAAuBC,KAAvB,CAA6B,eACEJ,QAAQ,CAAC,KAAD,CADV,wCACnBK,MADmB,eACXC,SADW,8BAEUN,QAAQ,CAAC,KAAD,CAFlB,yCAEnBO,UAFmB,eAEPC,aAFO,eAGzBP,SAAS,CAAC,UAAI,CACV,GAAIG,KAAK,CAACC,MAAV,CAAiB,CACbC,SAAS,CAAC,IAAD,CAAT,CACAE,aAAa,CAAC,IAAD,CAAb,CACH,CAHD,IAGK,CACDF,SAAS,CAAC,KAAD,CAAT,CACH,CACJ,CAPQ,CAOP,CAACF,KAAK,CAACC,MAAP,CAPO,CAAT,CAQI,GAAII,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAK,CACpB,GAAG,CAACF,UAAJ,CAAe,CACX,MAAO,MAAP,CACH,CAFD,IAGK,IAAIF,MAAJ,CAAW,CACZ,MAAO,MAAP,CACH,CAFI,IAEA,CACD,MAAO,QAAP,CACH,CACJ,CATD,CAUA,MACI,4BAAK,SAAS,WAAKI,YAAY,EAAjB,cAAd,CAA+C,KAAK,CAAE,CAAC,WAAW,OAAZ,CAAoB,MAAM,KAA1B,CAAtD,CAAwF,EAAE,CAAC,cAA3F,EACI,oBAAC,SAAD,EAAY,KAAK,CAAG,CAAC,SAAD,CAAY,UAAZ,CAAwB,WAAxB,CAAoC,YAApC,CAAiD,eAAjD,CAAiE,UAAjE,CAA4E,MAA5E,CAApB,CAA0G,gBAAgB,CAAC,YAA3H,EACI,gCAAM,yBAAG,IAAI,CAAC,WAAR,QAAN,CADJ,CAEI,gCAAM,yBAAG,IAAI,CAAC,YAAR,aAAN,CAFJ,CAGI,gCAAM,yBAAG,IAAI,CAAC,aAAR,cAAN,CAHJ,CAII,gCAAM,yBAAG,IAAI,CAAC,cAAR,eAAN,CAJJ,CAKI,gCAAM,yBAAG,IAAI,CAAC,iBAAR,mBAAN,CALJ,CAMI,gCAAM,yBAAG,IAAI,CAAC,WAAR,aAAN,CANJ,CAOI,gCAAM,yBAAG,IAAI,CAAC,OAAR,SAAN,CAPJ,CADJ,CADJ,CAaH,CACL,cAAeN,CAAAA,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Scrollspy from 'react-scrollspy';\nimport './StickyNavBar.css'\n\n\nfunction StickyNavBar (props){\n    const[sticky, setSticky] = useState(false);\n    const[beenSticky, setBeenSticky] = useState(false);\n    useEffect(()=>{\n        if (props.sticky){\n            setSticky(true)\n            setBeenSticky(true)\n        }else{\n            setSticky(false)\n        }\n    },[props.sticky])\n        let sticky_state = () =>{\n            if(!beenSticky){\n                return 'none'\n            }\n            else if (sticky){\n                return 'show'\n            }else{\n                return 'hidden'\n            }\n        }\n        return(\n            <div className={`${sticky_state()} scrollspy`} style={{'position':'fixed','top':'0px'}} id='StickyNavBar'>\n                <Scrollspy  items={ ['TopPane', 'Ceremony', 'Reception','Afterparty','Accomodations','Registry','RSVP'] } currentClassName=\"is-current\">\n                    <span><a href=\"/#TopPane\" >Top</a></span>\n                    <span><a href=\"/#Ceremony\" >Ceremony</a></span>\n                    <span><a href=\"/#Reception\" >Reception</a></span>\n                    <span><a href=\"/#Afterparty\" >Afterparty</a></span>\n                    <span><a href=\"/accommodations\" >Accommodations</a></span>\n                    <span><a href=\"/registry\" >Registry</a></span>\n                    <span><a href=\"/RSVP\" >RSVP</a></span>\n                </Scrollspy>\n            </div>\n        )\n    }\nexport default StickyNavBar;"]},"metadata":{},"sourceType":"module"}